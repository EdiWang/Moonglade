//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.2.5.1
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Moonglade.Data
{
   /// <summary>
   /// My Publications
   /// </summary>
   [System.ComponentModel.Description("My Publications")]
   public partial class PublicationEntity
   {
      partial void Init();

      /// <summary>
      /// Default constructor. Protected due to required properties, but present because EF needs it.
      /// </summary>
      protected PublicationEntity()
      {
         Init();
      }

      /// <summary>
      /// Replaces default constructor, since it's protected. Caller assumes responsibility for setting all required values before saving.
      /// </summary>
      public static PublicationEntity CreatePublicationEntityUnsafe()
      {
         return new PublicationEntity();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="publicationname"></param>
      /// <param name="publisher"></param>
      /// <param name="datepublished"></param>
      /// <param name="authors"></param>
      /// <param name="isbook"></param>
      /// <param name="title"></param>
      /// <param name="link"></param>
      /// <param name="identifier"></param>
      public PublicationEntity(string publicationname, string publisher, DateTime datepublished, string authors, bool isbook, string title, string link, string identifier)
      {
         if (string.IsNullOrEmpty(publicationname)) throw new ArgumentNullException(nameof(publicationname));
         this.PublicationName = publicationname;

         if (string.IsNullOrEmpty(publisher)) throw new ArgumentNullException(nameof(publisher));
         this.Publisher = publisher;

         this.DatePublished = datepublished;

         if (string.IsNullOrEmpty(authors)) throw new ArgumentNullException(nameof(authors));
         this.Authors = authors;

         this.IsBook = isbook;

         if (string.IsNullOrEmpty(title)) throw new ArgumentNullException(nameof(title));
         this.Title = title;

         if (string.IsNullOrEmpty(link)) throw new ArgumentNullException(nameof(link));
         this.Link = link;

         if (string.IsNullOrEmpty(identifier)) throw new ArgumentNullException(nameof(identifier));
         this.Identifier = identifier;

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="publicationname"></param>
      /// <param name="publisher"></param>
      /// <param name="datepublished"></param>
      /// <param name="authors"></param>
      /// <param name="isbook"></param>
      /// <param name="title"></param>
      /// <param name="link"></param>
      /// <param name="identifier"></param>
      public static PublicationEntity Create(string publicationname, string publisher, DateTime datepublished, string authors, bool isbook, string title, string link, string identifier)
      {
         return new PublicationEntity(publicationname, publisher, datepublished, authors, isbook, title, link, identifier);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Required, Max length = 100
      /// </summary>
      [Required]
      [MaxLength(100)]
      [StringLength(100)]
      public string Authors { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public DateTime DatePublished { get; set; }

      /// <summary>
      /// Identity, Required
      /// </summary>
      [Key]
      [Required]
      public int Id { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string Identifier { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      [Required]
      public bool IsBook { get; set; }

      public global::Moonglade.Data.Enum.LanguageEnum? Language { get; set; }

      /// <summary>
      /// Required, Max length = 150
      /// </summary>
      [Required]
      [MaxLength(150)]
      [StringLength(150)]
      public string Link { get; set; }

      /// <summary>
      /// Required, Max length = 100
      /// </summary>
      [Required]
      [MaxLength(100)]
      [StringLength(100)]
      public string PublicationName { get; set; }

      /// <summary>
      /// Required, Max length = 50
      /// </summary>
      [Required]
      [MaxLength(50)]
      [StringLength(50)]
      public string Publisher { get; set; }

      /// <summary>
      /// Required, Max length = 100
      /// </summary>
      [Required]
      [MaxLength(100)]
      [StringLength(100)]
      public string Title { get; set; }

   }
}

