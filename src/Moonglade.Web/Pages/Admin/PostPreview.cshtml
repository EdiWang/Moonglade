@page "/admin/post/preview/{postId:guid}"
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Moonglade.Core.PostFeature
@using Moonglade.Data.Entities
@using Moonglade.Utils

@{
    Layout = "_Layout";
    ViewBag.BodyClass = "body-post-slug";
}

@section meta {
    <meta name="robots" content="noindex, nofollow" />
    <meta name="title" content="@Post.Title" />
    <meta name="author" content="@(string.IsNullOrWhiteSpace(Post.Author) ? BlogConfig.GeneralSettings.OwnerName : Post.Author) " />
    <meta name="image-device-dpi" content="@BlogConfig.ImageSettings.FitImageToDevicePixelRatio.ToString().ToLower()" />
    <meta name="post-is-published" content="@((Model.Post.PostStatus == PostStatusConstants.Published).ToString().ToLower())" />
}

@section head {
    <link href="~/css/post.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/highlighter-custom.css" rel="stylesheet" asp-append-version="true" />
}

@section scripts {
    <script src="~/js/3rd/highlight.min.js" asp-append-version="true"></script>
    <script src="~/js/3rd/katex.min.js"></script>
    <script type="module" src="~/js/app/post.mjs" asp-append-version="true"></script>
}

<div class="alert alert-info">
    @SharedLocalizer["This is a preview for draft content."]
</div>

<article class="article-post-slug position-relative rounded-3 shadow-sm border bg-white mb-4" data-postid="@Post.Id" lang="@Post.ContentLanguageCode">
    @if (Post.IsFeatured)
    {
        <partial name="_FeaturedTag" />
    }

    <header class="post-header @(BlogConfig.ContentSettings.PostTitleAlignment == PostTitleAlignment.Center ? "text-center" : null)">
        <h1 class="post-title">
            @Post.Title
        </h1>

        <hr class="d-none d-md-block" />
    </header>

    @if (!string.IsNullOrWhiteSpace(Post.HeroImageUrl))
    {
        <div class="post-hero-image-container text-center mb-3">
            <img src="@Helper.SterilizeLink(Post.HeroImageUrl)" class="post-hero-image img-fluid rounded-3 shadow-sm" />
        </div>
    }

    <section class="post-content clearfix">
        <partial name="_PostContentRender" model="Post.PostContent" />
    </section>
    @if (BlogConfig.ContentSettings.ShowPostFooter)
    {
        <section class="post-footer clearfix">
            @Html.Raw(BlogConfig.ContentSettings.PostFooterHtmlPitch)
        </section>
    }

    <partial name="_PostActions" model="Post" />
</article>

<div class="modal fade" id="imgzoomModal" tabindex="-1" role="dialog" aria-labelledby="imgzoomModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-imgzoom" role="document" style="max-width: 100%">
        <div class="modal-content">
            <img id="imgzoom" alt="imgzoom" class="img-fluid" />
        </div>
    </div>
</div>

@if (BlogConfig.AdvancedSettings.WarnExternalLink)
{
    <partial name="_ExternalLink" />
}

<partial name="_PostForestageAdmin" />

@functions
{
    public PostEntity Post { get; set; }

    public async Task<IActionResult> OnGetAsync(Guid postId)
    {
        var post = await Mediator.Send(new GetDraftQuery(postId));
        if (post is null) return NotFound();

        ViewData["TitlePrefix"] = $"{post.Title}";

        Post = post;
        return Page();
    }
}
