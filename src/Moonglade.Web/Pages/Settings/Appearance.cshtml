@page "/admin/settings/appearance"
@using Moonglade.Data.Entities

@Html.AntiForgeryToken()
@section scripts {
    <partial name="_MonacoLoaderScript" />
    <script type="module" src="~/js/app/admin.settings.appearance.mjs" asp-append-version="true"></script>
}

@section head {
    <style>
        .monaco-target {
            min-height: calc(100vh - 450px);
        }

        .theme-selector-container.active {
            border: 2px solid black !important;
        }

        .theme-selector-footer {
            justify-content: space-between;
        }

        .theme-color-indicator {
            height: 24px;
        }

        .theme-selector-footer.active {
            font-weight: bold;
        }
    </style>
}

@section admintoolbar {
    <partial name="_SettingsHeader" />
}

<form id="form-settings" asp-controller="Settings" asp-action="Appearance">
    <div class="admin-settings-entry-container">
        <div class="row">
            <div class="col-md-6">
                <h4 class="admin-subtitle fw-bold mb-2">
                    @SharedLocalizer["Theme"]
                </h4>

                <section id="section-system-themes">
                    <div class="text-muted mb-1">@SharedLocalizer["System Themes"]</div>
                    <div class="row g-3">
                        @foreach (var theme in Themes.Where(p => p.ThemeType == ThemeType.System))
                        {
                            <div class="col-md-4">
                                <div class="theme-selector-container card @(ViewModel.ThemeId == theme.Id ? "active" : null)"
                                     style="border-color: @theme.CssRulesDictionary["--accent-color1"]"
                                     id="theme-selector-container-@theme.Id"
                                     data-theme-id="@theme.Id">
                                    <div class="theme-preview-body d-flex p-1">
                                        @foreach (var dic in theme.CssRulesDictionary)
                                        {
                                            <div class="theme-color-indicator w-100 px-1" style="background-color: @dic.Value">
                                            </div>
                                        }

                                        <div class="theme-color-indicator w-100 px-1" style="background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), @theme.CssRulesDictionary["--accent-color1"]">
                                        </div>
                                    </div>

                                    <div class="card-footer text-light theme-selector-footer @(ViewModel.ThemeId == theme.Id ? "active" : null)"
                                         style="background-color: @theme.CssRulesDictionary["--accent-color1"]">
                                        <input class="form-check-input" type="radio" asp-for="@ViewModel.ThemeId" id="ThemeId_@theme.Id" value="@theme.Id" />
                                        <label class="form-check-label" for="ThemeId_@theme.Id">@theme.ThemeName</label>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </section>

                <section id="section-user-themes" class="mt-4">
                    <div class="text-muted mb-1">@SharedLocalizer["User Themes"]</div>

                    @if (UserThemes.Count == 0)
                    {
                        <div class="alert alert-info mt-2" role="alert">
                            @SharedLocalizer["No user themes found, create one to get started."]
                        </div>
                    }

                    <div class="row g-3 mb-2">
                        @foreach (var theme in UserThemes)
                        {
                            <div class="col-md-4" id="user-theme-col-@theme.Id">
                                <div class="theme-selector-container card @(ViewModel.ThemeId == theme.Id ? "active" : null)"
                                     style="border-color: @theme.CssRulesDictionary["--accent-color1"]"
                                     id="theme-selector-container-@theme.Id"
                                     data-theme-id="@theme.Id">
                                    <div class="theme-preview-body d-flex p-1">
                                        @foreach (var dic in theme.CssRulesDictionary)
                                        {
                                            <div class="theme-color-indicator w-100 px-1" style="background-color: @dic.Value">
                                            </div>
                                        }

                                        <div class="theme-color-indicator w-100 px-1" style="background: linear-gradient(rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4)), @theme.CssRulesDictionary["--accent-color1"]">
                                        </div>
                                    </div>

                                    <div class="card-footer text-light d-flex theme-selector-footer @(ViewModel.ThemeId == theme.Id ? "active" : null)"
                                         style="background-color: @theme.CssRulesDictionary["--accent-color1"]">

                                        <div>
                                            <input class="form-check-input" type="radio" asp-for="@ViewModel.ThemeId" id="ThemeId_@theme.Id" value="@theme.Id" />
                                            <label class="form-check-label" for="ThemeId_@theme.Id">@theme.ThemeName</label>
                                        </div>

                                        <a class="text-light btn-delete-theme" href="javascript:deleteTheme(@theme.Id);">
                                            <i class="bi-trash"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    @if (UserThemes.Count < 10)
                    {
                        <div>
                            <a class="btn btn-outline-accent" href="#" data-bs-toggle="modal" data-bs-target="#thememodal">
                                <i class="bi-plus-lg"></i>
                                @SharedLocalizer["New"]
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="text-muted mt-2" role="alert">
                            @SharedLocalizer["You have reached the maximum number of user themes."]
                        </div>
                    }
                </section>
            </div>
            <div class="col-md-6">
                <h4 class="admin-subtitle fw-bold mb-2">
                    @SharedLocalizer["Custom CSS"]
                </h4>

                <div class="settings-entry row align-items-center py-3 px-2 rounded-3 shadow-sm border mb-2">
                    <div class="col-auto">
                        <i class="bi-palette settings-entry-icon"></i>
                    </div>
                    <div class="col">
                        <label asp-for="@ViewModel.EnableCustomCss" class="form-check-label"></label>
                    </div>
                    <div class="col-md-5 text-end">
                        <div class="form-check form-switch form-control-lg">
                            <input type="hidden" name="EnableCustomCss" value="false">
                            <input type="checkbox" name="EnableCustomCss" value="true" class="form-check-input" @(@ViewModel.EnableCustomCss ? "checked" : null) />
                        </div>
                    </div>
                </div>

                <div id="CssContentEditor" class="monaco-target p-3 rounded-3 shadow-sm border">
                </div>
                <textarea asp-for="@ViewModel.CssCode" class="settings-csscontent-textarea d-none"></textarea>
            </div>
        </div>
    </div>

    <div class="admin-settings-action-container border-top pt-2 mt-2">
        <button type="submit" class="btn btn-outline-accent" id="btn-save-settings">
            @SharedLocalizer["Save"]
        </button>
    </div>
</form>

<partial name="_ThemeModal" model="ThemeRequest" />

@functions
{
    public AppearanceSettings ViewModel { get; set; }

    public CreateThemeRequest ThemeRequest { get; set; }

    public List<BlogThemeEntity> Themes { get; set; }

    public List<BlogThemeEntity> UserThemes => Themes.Where(p => p.ThemeType == ThemeType.User).ToList();


    public async Task OnGetAsync()
    {
        ViewModel = BlogConfig.AppearanceSettings;

        Themes = await Mediator.Send(new GetAllThemeSegmentQuery());
    }
}
