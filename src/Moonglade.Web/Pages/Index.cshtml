@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Moonglade.Core.PostFeature
@using Moonglade.Web.PagedList

@{
    ViewBag.TitlePrefix = null;
    ViewBag.BodyClass = "body-home-index bg-gray-1";
    ViewBag.ActionName = "Index";
}

<h2 class="page-heading d-flex align-items-center mb-4">
    <span>
        @SharedLocalizer["All Posts"]
    </span>

    <span class="flex-spacer"></span>

    <a class="d-none d-md-block" asp-controller="Subscription" asp-action="Rss" target="_blank" title="@SharedLocalizer["Subscribe recent posts"]">
        <i class="bi-rss font-125rem"></i>
    </a>
</h2>

@if (Posts?.Count > 0)
{
    <partial name="_PostList" model="Posts" />
}
else
{
    <div class="alert alert-info">
        @SharedLocalizer["No Posts"]
    </div>
}

@functions
{
    public BasePagedList<PostDigest> Posts { get; set; } = new BasePagedList<PostDigest>([], 1, 1, 0);

    [FromQuery]
    public int P { get; set; } = 1;

    public async Task<IActionResult> OnGetAsync(int p = 1)
    {
        // Validate page parameter
        if (p < 1)
        {
            return RedirectToPage("Index", new { p = 1 });
        }

        P = p;
        var pageSize = BlogConfig.ContentSettings.PostListPageSize;

        var posts = await QueryMediator.QueryAsync(new ListPostsQuery(pageSize, p));
        var totalPostsCount = await QueryMediator.QueryAsync(new CountPostQuery(CountType.Public));

        // Calculate total pages to validate current page
        var totalPages = (int)Math.Ceiling((double)totalPostsCount / pageSize);

        // Redirect if page is beyond available pages and we have posts
        if (p > totalPages && totalPostsCount > 0)
        {
            return RedirectToPage("Index", new { p = totalPages });
        }

        Posts = new BasePagedList<PostDigest>(posts ?? [], p, pageSize, totalPostsCount);

        return Page();
    }
}
