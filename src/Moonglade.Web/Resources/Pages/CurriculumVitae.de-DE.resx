<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about-experience" xml:space="preserve">
    <value>Erfahrung</value>
  </data>
  <data name="about-jobs" xml:space="preserve">
    <value>Ich bin ein </value>
  </data>
  <data name="about-name" xml:space="preserve">
    <value>Mein Name ist</value>
  </data>
  <data name="about-other-skills" xml:space="preserve">
    <value>Andere Fähigkeiten:</value>
  </data>
  <data name="about-program" xml:space="preserve">
    <value>Ich liebe es zu Programmieren oder Workflows in Lösungen umzusetzen.</value>
  </data>
  <data name="about-year" xml:space="preserve">
    <value>jähriger</value>
  </data>
  <data name="about-year1" xml:space="preserve">
    <value>Jahre</value>
  </data>
  <data name="activity-all" xml:space="preserve">
    <value>Meine gesamten Programmieraktivitäten (letztes Jahr)</value>
  </data>
  <data name="activity-last30" xml:space="preserve">
    <value>Benutzte Programmiersprachen der letzten 30 Tage</value>
  </data>
  <data name="activity-title" xml:space="preserve">
    <value>Meine Programmieraktivitäten (Nur öffentliche Github Repos, letztes Jahr)</value>
  </data>
  <data name="education-title" xml:space="preserve">
    <value>Aus- &amp; Weiterbildung</value>
  </data>
  <data name="experience-cert-employment" xml:space="preserve">
    <value>Arbeitszeugnis</value>
  </data>
  <data name="experience-certs" xml:space="preserve">
    <value>Zertifikate</value>
  </data>
  <data name="experience-content" xml:space="preserve">
    <value>Inhalte</value>
  </data>
  <data name="experience-downloadcv" xml:space="preserve">
    <value>Download CV</value>
  </data>
  <data name="experience-header" xml:space="preserve">
    <value>Berufserfahrung</value>
  </data>
  <data name="experience-header1" xml:space="preserve">
    <value>Aus &amp;amp; Weiterbildungen</value>
  </data>
  <data name="jobs-title" xml:space="preserve">
    <value>Bisherige berufliche Stationen</value>
  </data>
  <data name="last" xml:space="preserve">
    <value>Letzte</value>
  </data>
  <data name="masterhead-lead" xml:space="preserve">
    <value>Willkommen zu meinem Lebenslauf</value>
  </data>
  <data name="portfolio-title" xml:space="preserve">
    <value>Mein Portfolio</value>
  </data>
  <data name="project-2-blurp" xml:space="preserve">
    <value>Ein Hilfsprogramm um mittels LaTEX eine Bewerbung zu schreiben und den Status aller gesendeten zu verwalten.</value>
  </data>
  <data name="projects" xml:space="preserve">
    <value>Projekte</value>
  </data>
  <data name="projects-1-blurp" xml:space="preserve">
    <value>Diese Webseite</value>
  </data>
  <data name="services-app" xml:space="preserve">
    <value>App-Entwicklung</value>
  </data>
  <data name="services-app-blurp" xml:space="preserve">
    <value>Mittels moderner Frameworks, wie .NET, Angular und anderen, setze ich Ihre Workflows in plattformunabhängige Apps um.</value>
  </data>
  <data name="services-architect" xml:space="preserve">
    <value>Softwarearchitektur</value>
  </data>
  <data name="services-architect-blurp" xml:space="preserve">
    <value>Als Softwarearchitekt sorge ich dafür, das vorhandener Code wartbar und portierbar bleibt und somit fit für Ihre Firmenzukunft.</value>
  </data>
  <data name="services-my" xml:space="preserve">
    <value>Meine</value>
  </data>
  <data name="services-specialization" xml:space="preserve">
    <value>Spezialisierungen</value>
  </data>
  <data name="services-web" xml:space="preserve">
    <value>Web-Entwicklung</value>
  </data>
  <data name="services-web-blurp" xml:space="preserve">
    <value>Ihre Webseiten erstelle ich mittels Technologien, wie ASP .NET, PHP, Angular oder Vue.js.</value>
  </data>
  <data name="skills-title" xml:space="preserve">
    <value>Erfahrungen</value>
  </data>
  <data name="testimonials" xml:space="preserve">
    <value>Letzte</value>
  </data>
  <data name="testimonials-testimonial" xml:space="preserve">
    <value>Empfehlungen</value>
  </data>
  <data name="viewbag-pageblurp" xml:space="preserve">
    <value>Meine beruflichen Erfahrungen</value>
  </data>
  <data name="viewbag-pagename" xml:space="preserve">
    <value>Lebenslauf &amp; Erfahrungen</value>
  </data>
  <data name="viewbag-title" xml:space="preserve">
    <value>Curriculum Vitae - Sascha Manns's Twilight Zone</value>
  </data>
  <data name="write-me" xml:space="preserve">
    <value>Schreiben Sie mir</value>
  </data>
</root>
