function callApi(n,t,i,r,u){const f=document.querySelector(`input[name=${csrfFieldName}]`).value;fetch(n,{method:t,headers:{Accept:"application/json","Content-Type":"application/json","XSRF-TOKEN":f},credentials:"include",body:t==="GET"?null:JSON.stringify(i)}).then(async n=>{n.ok?r&&r(n):await handleHttpError(n)}).then(n=>{u&&u(n)}).catch(n=>{blogToast.error(n),console.error(n)})}async function handleHttpError(n){switch(n.status){case 400:case 409:blogToast.error(await buildErrorMessage2(n));break;case 401:blogToast.error("Unauthorized");break;case 404:blogToast.error("Endpoint not found");break;case 429:blogToast.error("Too many requests");break;case 500:case 503:blogToast.error("Server went boom");break;default:blogToast.error(`Error ${n.status}`)}}function buildErrorMessage(n){var t,i;return n.responseJSON?(t=n.responseJSON,t.combinedErrorMessage?t.combinedErrorMessage:(i="Error(s):\n\r",Object.keys(t).forEach(function(n){i+=n+": "+t[n]+"\n\r"}),i)):n.responseText?n.responseText.trim():n.status}async function buildErrorMessage2(n){var t,u,i;const r=n.headers.get("content-type");return r&&r.indexOf("application/json")!==-1?(t=await n.json(),u=typeof t,t.combinedErrorMessage?t.combinedErrorMessage:u=="string"?t:(i="Error(s):\n\r",Object.keys(t).forEach(function(n){i+=n+": "+t[n]+"\n\r"}),i)):await n.text()}var csrfFieldName="CSRF-TOKEN-MOONGLADE-FORM";